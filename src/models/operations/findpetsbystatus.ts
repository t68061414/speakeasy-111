/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { ClosedEnum } from "../../types/enums.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

/**
 * Status values that need to be considered for filter
 */
export const Status = {
  Available: "available",
  Pending: "pending",
  Sold: "sold",
} as const;
/**
 * Status values that need to be considered for filter
 */
export type Status = ClosedEnum<typeof Status>;

export type FindPetsByStatusRequest = {
  /**
   * Status values that need to be considered for filter
   */
  status?: Status | undefined;
};

/** @internal */
export const Status$inboundSchema: z.ZodNativeEnum<typeof Status> = z
  .nativeEnum(Status);

/** @internal */
export const Status$outboundSchema: z.ZodNativeEnum<typeof Status> =
  Status$inboundSchema;

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace Status$ {
  /** @deprecated use `Status$inboundSchema` instead. */
  export const inboundSchema = Status$inboundSchema;
  /** @deprecated use `Status$outboundSchema` instead. */
  export const outboundSchema = Status$outboundSchema;
}

/** @internal */
export const FindPetsByStatusRequest$inboundSchema: z.ZodType<
  FindPetsByStatusRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  status: Status$inboundSchema.default("available"),
});

/** @internal */
export type FindPetsByStatusRequest$Outbound = {
  status: string;
};

/** @internal */
export const FindPetsByStatusRequest$outboundSchema: z.ZodType<
  FindPetsByStatusRequest$Outbound,
  z.ZodTypeDef,
  FindPetsByStatusRequest
> = z.object({
  status: Status$outboundSchema.default("available"),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace FindPetsByStatusRequest$ {
  /** @deprecated use `FindPetsByStatusRequest$inboundSchema` instead. */
  export const inboundSchema = FindPetsByStatusRequest$inboundSchema;
  /** @deprecated use `FindPetsByStatusRequest$outboundSchema` instead. */
  export const outboundSchema = FindPetsByStatusRequest$outboundSchema;
  /** @deprecated use `FindPetsByStatusRequest$Outbound` instead. */
  export type Outbound = FindPetsByStatusRequest$Outbound;
}

export function findPetsByStatusRequestToJSON(
  findPetsByStatusRequest: FindPetsByStatusRequest,
): string {
  return JSON.stringify(
    FindPetsByStatusRequest$outboundSchema.parse(findPetsByStatusRequest),
  );
}

export function findPetsByStatusRequestFromJSON(
  jsonString: string,
): SafeParseResult<FindPetsByStatusRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => FindPetsByStatusRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'FindPetsByStatusRequest' from JSON`,
  );
}
