/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetOrderByIdRequest = {
  /**
   * ID of order that needs to be fetched
   */
  orderId: number;
};

/** @internal */
export const GetOrderByIdRequest$inboundSchema: z.ZodType<
  GetOrderByIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  orderId: z.number().int(),
});

/** @internal */
export type GetOrderByIdRequest$Outbound = {
  orderId: number;
};

/** @internal */
export const GetOrderByIdRequest$outboundSchema: z.ZodType<
  GetOrderByIdRequest$Outbound,
  z.ZodTypeDef,
  GetOrderByIdRequest
> = z.object({
  orderId: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetOrderByIdRequest$ {
  /** @deprecated use `GetOrderByIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetOrderByIdRequest$inboundSchema;
  /** @deprecated use `GetOrderByIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetOrderByIdRequest$outboundSchema;
  /** @deprecated use `GetOrderByIdRequest$Outbound` instead. */
  export type Outbound = GetOrderByIdRequest$Outbound;
}

export function getOrderByIdRequestToJSON(
  getOrderByIdRequest: GetOrderByIdRequest,
): string {
  return JSON.stringify(
    GetOrderByIdRequest$outboundSchema.parse(getOrderByIdRequest),
  );
}

export function getOrderByIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetOrderByIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetOrderByIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetOrderByIdRequest' from JSON`,
  );
}
