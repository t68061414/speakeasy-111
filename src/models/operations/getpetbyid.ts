/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";

export type GetPetByIdRequest = {
  /**
   * ID of pet to return
   */
  petId: number;
};

/** @internal */
export const GetPetByIdRequest$inboundSchema: z.ZodType<
  GetPetByIdRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  petId: z.number().int(),
});

/** @internal */
export type GetPetByIdRequest$Outbound = {
  petId: number;
};

/** @internal */
export const GetPetByIdRequest$outboundSchema: z.ZodType<
  GetPetByIdRequest$Outbound,
  z.ZodTypeDef,
  GetPetByIdRequest
> = z.object({
  petId: z.number().int(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace GetPetByIdRequest$ {
  /** @deprecated use `GetPetByIdRequest$inboundSchema` instead. */
  export const inboundSchema = GetPetByIdRequest$inboundSchema;
  /** @deprecated use `GetPetByIdRequest$outboundSchema` instead. */
  export const outboundSchema = GetPetByIdRequest$outboundSchema;
  /** @deprecated use `GetPetByIdRequest$Outbound` instead. */
  export type Outbound = GetPetByIdRequest$Outbound;
}

export function getPetByIdRequestToJSON(
  getPetByIdRequest: GetPetByIdRequest,
): string {
  return JSON.stringify(
    GetPetByIdRequest$outboundSchema.parse(getPetByIdRequest),
  );
}

export function getPetByIdRequestFromJSON(
  jsonString: string,
): SafeParseResult<GetPetByIdRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => GetPetByIdRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'GetPetByIdRequest' from JSON`,
  );
}
